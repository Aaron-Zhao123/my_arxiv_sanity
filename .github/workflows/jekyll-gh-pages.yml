# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches: [ main ]
    paths:
      - 'new_paper.pkl'
      - 'docs/**'
      - 'export_papers.py'
      - '.github/workflows/jekyll-gh-pages.yml'
  workflow_dispatch:
  schedule:
    # Run daily at 9 AM UTC to check for new papers
    - cron: '0 9 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          
      - name: Setup Python with uv
        run: uv python install 3.11
          
      - name: Install dependencies
        run: |
          # Only install pickle (built-in) - no external dependencies needed
          uv sync --no-dev || true
          
      - name: Check if new_paper.pkl exists
        id: check_file
        run: |
          if [ -f new_paper.pkl ]; then
            echo "pickle_exists=true" >> $GITHUB_OUTPUT
          else
            echo "pickle_exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Convert pickle to markdown
        run: |
          uv run python export_papers.py
          
      - name: Debug - Show index.md contents
        run: |
          echo "=== Contents of docs/index.md ==="
          cat docs/index.md || echo "docs/index.md not found"
          echo "=== CSS file exists? ==="
          ls -la docs/assets/css/style.scss || echo "CSS file not found"
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
